<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>JRC's blog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2019-11-20T23:00:00+08:00</updated><entry><title>今天再次停更一天</title><link href="/jin-tian-zai-ci-ting-geng-yi-tian.html" rel="alternate"></link><published>2019-11-20T22:43:00+08:00</published><updated>2019-11-20T23:00:00+08:00</updated><author><name>rcjiang</name></author><id>tag:None,2019-11-20:/jin-tian-zai-ci-ting-geng-yi-tian.html</id><summary type="html">&lt;p&gt;今天再次停更一天&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天我再次停更一天，因为着实是有点累，白天在工位上的时候脑壳有点疼🤕,我再休息一天🤣&lt;/p&gt;</content><category term="停更"></category><category term="有点累"></category><category term="停更"></category></entry><entry><title>今天停更一天</title><link href="/jin-tian-ting-geng-yi-tian.html" rel="alternate"></link><published>2019-11-19T23:48:00+08:00</published><updated>2019-11-20T00:00:00+08:00</updated><author><name>rcjiang</name></author><id>tag:None,2019-11-19:/jin-tian-ting-geng-yi-tian.html</id><summary type="html">&lt;p&gt;今天停更一天&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天停更一天啊，因为今天本来想写xilinx时钟的，后来我发现东西有点多我还没学完，所以今天停更，挖个坑，等学完再把这个坑给填上。  &lt;/p&gt;</content><category term="停更"></category><category term="xilinx时钟"></category><category term="停更"></category></entry><entry><title>理论上Verilog传奇第一章后半部分</title><link href="/%E5%B9%B6%E4%B8%8D%E6%98%AFverilog%E4%BC%A0%E5%A5%87%E7%AC%AC%E4%B8%80%E7%AB%A0%E5%90%8E%E5%8D%8A%E9%83%A8%E5%88%86(UCF-%3EXDC).html" rel="alternate"></link><published>2019-11-18T23:48:00+08:00</published><updated>2019-11-19T00:30:00+08:00</updated><author><name>rcjiang</name></author><id>tag:None,2019-11-18:/并不是verilog传奇第一章后半部分(UCF-&gt;XDC).html</id><summary type="html">&lt;p&gt;本blog讲的是verilog约束文件&lt;/p&gt;</summary><content type="html">&lt;h3&gt;并不是verilog传奇第一章后半部分(UCF-&amp;gt;XDC)&lt;/h3&gt;
&lt;h3&gt;我这个初学者关于Xilinx的IDE及其约束文件的区别&lt;/h3&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;首先Xilinx公司是个优秀的公司，尤其他们公司的论坛，简直是高端客服，不管你在论坛上提什么搞笑的问题，都会有人及时解答，给我的感觉像是这帮人轮班倒，24小时给你解答问题。&lt;strong&gt;但是&lt;/strong&gt;，他们这个IDE给我的感觉就是，公司本来有一个挺好的团队开发IDE，并且把IDE起名叫做ISE，然后过了段时间，出了几款新的FPGA，但这个时候呢，可能是开发ISE的团队人员离开了，也可能他们在忙别的项目，没法在原来的IDE里加入新的FPGA的综合和实现工具了😂，么得办法，为了这新款的FPGA，就只能再开发一款IDE叫做VIVADO，而且这东西和前面的ISE在约束文件的写法不兼容，于是开发vivado的大哥找来了当年开发ISE的二哥，大哥和二哥在一起商讨了几天留下了几页。于是乎就有了这个&lt;a href="https://www.xilinx.com/support/documentation/sw_manuals/xilinx2019_1/ug911-vivado-migration.pdf"&gt;转换文档&lt;/a&gt;。而且大哥发现自己的约束文件需要的语法越来越丰富，所以每年都会去找二哥商讨几天，就这样这个文档每年几乎都会更新。&lt;br&gt;
&amp;emsp;&amp;emsp;光有这个文档是不够的，还是会有一些零碎的小问题。有几个注意事项需要明确的说明，首先一般而言,在ISE中这样写就算把LED放在A18引脚就行了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="no"&gt;NET&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;led[0]&amp;quot;&lt;/span&gt; &lt;span class="no"&gt;LOC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;A18&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在VIVADO中需要写两行(这个两行才能通过综合也可能是因为我在vivado上用的是ZYNQ，而上面用的是spartan6)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;set_property&lt;/span&gt; &lt;span class="no"&gt;PACKAGEPACKAGE_PIN&lt;/span&gt; &lt;span class="no"&gt;A18&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;get_ports&lt;/span&gt; &lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])}]&lt;/span&gt;
&lt;span class="n"&gt;set_property&lt;/span&gt; &lt;span class="no"&gt;IOSTANDARD&lt;/span&gt; &lt;span class="no"&gt;LVCMOSXX&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;get_ports&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}]&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="err"&gt;上面那行的&lt;/span&gt;&lt;span class="no"&gt;LVCMOSXX的XX在下面会介绍&lt;/span&gt;&lt;span class="err"&gt;，算了有时间再介绍吧，有点困，那个还要上传图片很麻烦的。&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着说说还有什么区别，暂时突然想不起来的，满脑子都是熬夜会猝死😂&lt;br&gt;
那就说说一些共同，看起来不重要，但实际上非常重要的点吧。
&lt;em&gt;首先是该空格的地方一定要空格
&lt;/em&gt;没有行尾注释，只能在行首注释&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="err"&gt;这样是对的&lt;/span&gt;
&lt;span class="no"&gt;NET&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;led[0]&amp;quot;&lt;/span&gt; &lt;span class="no"&gt;LOC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;A18&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;#&lt;/span&gt;&lt;span class="err"&gt;这样是错的&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后目前我先写这些吧，一来是有点困，二来还是有点困。先把文档看一遍，其实基本上剩下的就是些零碎的小问题。&lt;/p&gt;</content><category term="vivado"></category><category term="verilog"></category><category term="vivado约束文件"></category></entry><entry><title>Verilog传奇第一章前半部分</title><link href="/verilog%E4%BC%A0%E5%A5%87%E7%AC%AC%E4%B8%80%E7%AB%A0%E5%89%8D%E5%8D%8A%E9%83%A8%E5%88%86.html" rel="alternate"></link><published>2019-11-17T22:50:00+08:00</published><updated>2019-11-17T00:42:00+08:00</updated><author><name>rcjiang</name></author><id>tag:None,2019-11-17:/verilog传奇第一章前半部分.html</id><summary type="html">&lt;p&gt;本blog主要讲了verilog语言的历史以及FPGA和ASIC芯片的设计流程&lt;/p&gt;</summary><content type="html">&lt;h3&gt;verilog的历史&lt;/h3&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;首先来说，电子工程师直接设计电路芯片的方式不是一开始就有的，这是由于工程的慢慢变大而现成的集成电路无法满足对于项目要求的时间以及功耗问题，所以才有了，ASIC以及FPGA的出现，verilog又是在ASIC和FPGA的出现后慢慢演变过来的，开始的时候大家都用VHDL，当然VHDL据说没有verilog这么灵活可以写仿真代码，又可以设计电路，但是我又不会VHDL所以据听说是这样我也没法考证。而verilog当时主要的作用就是测试，因为他是高级语言，据说是根据C语言改的，所以当时没有什么方法可以将它转化为电路，直到1987年，有个公司给verilog写了个综合工具，verilog变得可以综合了，也就可以组成电路了，于是便被广大ASIC、FPGA厂商采用，就出现了今天的这个局面。&lt;br&gt;
&amp;emsp;&amp;emsp;然而,正是由于verilog是从仿真过度而来的，verilog有很多不可综合的关键字用于测试仿真，这对于初学者而言，往往分不清到底什么是可综合的。纵观verilog语言其实和C语言十分相像，有一个top_module类似于C语言的main，当然verilog的top_module的名字可以随便起，然后top_module可以调用别的子module，但不同的是verilog里的变量需要根据时序来改变数据，这个问题包括=与&amp;lt;=的区别，还有各module之间的组合问题,这些会在接下来以后的blog中慢慢讲解。而对于verilog的测试仿真功能，基本就是Initial和一些$*语句的使用，这些在以后也会详细的介绍。&lt;br&gt;
&amp;emsp;&amp;emsp;verilog虽然取自于C但是实际上的表达的功能已经和C语言大相径庭了，所以在写代码上，初学者一般会出现下面的情况。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;*Verilog写完不能综合。这是由于新手对于综合的关键字并不熟悉造成的，一些大佬verilog的关键字也就用了不到1/3，这话不是我说的，是写书的那个作者写的。所以其实没必要把所有关键字都用一遍，只需要用常用的就好，就像C语言后来出了个柔性数组，也没见谁在程序里用它了。(也可能我见的太少了)  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;综合器总报警告。这在某些情况下是正常现象，因为有些电路人想得明白但是检错程序里却认为这是个问题，如果你对这个电路熟悉，就不会有问题，要随时去巩固数电才行。  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;资源不够用。这是因为写的太像C语言了，而实际上，一个电路里不可能有那么多像C程序里暂时没用到的变量。  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;时序有问题。这个就需要多练习了。要多像电路一样思考才能对时序有深刻的理解。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;直接下到板子里看程序的对错。这个一般是搞单片机的人容易犯的错误，但是如果项目变得非常大，下到板子里，根本就看不出什么问题了，因为板子可以观察的数据很有限，所以应该先仿真没问题了再下到板子里。  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;还有就是愿意用循环。在verilog中只有C语言的for循环被保留了下来，其他的都不可综合，但是verilog的for循环每次循环都会生成一次变量，for在这本书里是提醒慎用的  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;综上所述，verilog的学习需要多了解数电，多像电路一样去思考。  &lt;/p&gt;
&lt;h3&gt;ASIC的设计&lt;/h3&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;值得注意的是ASIC的设计和软件一样也分前端与后端，前端负责设计具体的逻辑，以生成网表(就类似PCB设计中的画原理图）为最终目的，而后端负责由生成的网表，选mos管、布局布线（类似画PCB图）。  &lt;/p&gt;
&lt;h3&gt;FPGA的设计&lt;/h3&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;FPGA的设计是前后端一起干了，但是也会存在延时导致的竞争冒险问题，这个就需要仿真的帮助。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;逻辑仿真-&amp;gt;综合后仿真-&amp;gt;实现后仿真  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这些一步一步接近现实的有延时的情况，最后都弄好了，才可以下到板子里看看还有没有什么问题。&lt;br&gt;
&amp;emsp;&amp;emsp;实际上这本书上说，ASIC的设计要比FPGA难很多，因为FPGA厂家已经对芯片进行了很大程度的设计。&lt;/p&gt;</content><category term="Verilog传奇"></category><category term="verilog"></category><category term="读书笔记"></category></entry><entry><title>My first post</title><link href="/My-first-post.html" rel="alternate"></link><published>2017-11-26T10:01:00+08:00</published><updated>2017-11-27T12:30:00+08:00</updated><author><name>Your name</name></author><id>tag:None,2017-11-26:/My-first-post.html</id><summary type="html">&lt;p&gt;What does your post talk about? Write here.&lt;/p&gt;</summary><content type="html">&lt;p&gt;各位，我今天才搭了我自己的博客，不要笑，用的pelican+github,以后打算写一点每天的收获 &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/不要笑.jpeg" width="200" height="200" alt="大家不要笑" align=center&gt;&lt;/p&gt;</content><category term="misc"></category><category term="first"></category><category term="misc"></category></entry></feed>